package Chapter02;

public class ObjectStudy {
    /*
        对象：通过实例化类得到的就是对象，常见的创建方式是 new()
        对象的创建和调用离不开JVM的管理方式，为了更好地理其程序执行过程有必要学习JVM如何管理它的内存

        栈内存[虚拟机栈 + 本地方法栈] + 方法区 + 堆内存
        虚拟机栈：存储局部变量表、操作数栈、动态链接、方法出口等信息。方法从调用到完成就对应着一个栈帧从入栈到出栈的过程。
        本地方法栈：与虚拟机发挥的作用相似，区别是Java虚拟机栈执行Java方法服务，而本地方法栈是本地方法服务。线程私有不共享。
        堆内存：存放对象实例，是垃圾回收器主要管理的地方，该块内存线程共享。
        方法区：存储已经被虚拟机加载的类信息、常量、静态变量，线程共享。

        以下列这段代码为例：
        1.程序开始执行，首先将类信息存储到方法区当中，这就是类加载。
        2.然后调用main方法，发生入栈动作
        3.int i = 10;这是一个局部变量，存储到栈空间中
        4.Student student = new Student();创建对象，存放到堆内存当中并初始化实例变量
        5.student 这个变量存储在栈空间当中，相当于是一个局部变量，内容为 Student 对象的堆内存地址指向堆内存中的对象
    */

    public static void main(String[] args) {
        int i = 10;
        Student student = new Student();
    }
}

class Student {
    private int age;
}
